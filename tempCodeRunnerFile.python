import base64
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC

def decrypt(salt, masterPassword, passwordEncrypt):
  kdf = PBKDF2HMAC(
      algorithm=hashes.SHA256(),
      length=32,
      salt=salt.encode(),
      iterations=390000,
  )
  masterPassword = masterPassword.encode()
  key = base64.urlsafe_b64encode(kdf.derive(masterPassword))
  f = Fernet(key)
  passwordEncrypt = passwordEncrypt.removeprefix("b'").removesuffix("'").encode()
  passwordDecrypt = f.decrypt(passwordEncrypt)
  return passwordDecrypt.decode('utf-8')

salt = "7ZfNnCUBKLppAsxV"
masterPassword = "testtest"
passwordEncrypt = "b'gAAAAABnvbdnT7rPl5bn2KcwJcDj_WG31ScYxRG-srhIorTcJYlmeI1I13oLHdco6ZoaVlKnJbUa3aqyRQ9BB5tTvYEmttkmYQ=='"


print(decrypt(salt, masterPassword, passwordEncrypt))